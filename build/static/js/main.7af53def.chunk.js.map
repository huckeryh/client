{"version":3,"sources":["AddOrders/1.js","AddOrders/2.js","AddOrders/3.js","AddOrders/4.js","Tables.js","Orders/1.js","Orders/2.js","Orders/3.js","Orders/4.js","App.js","reportWebVitals.js","index.js"],"names":["AddOrders1","orders","setOrders","useState","id","isOpen","selectedOption","modification","cost","showConfirmation","setShowConfirmation","options","label","calculateOrderTotal","order","reduce","total","o","modificationCost","calculateTotalCost","React","createElement","className","Link","to","style","textAlign","float","map","key","onClick","prevOrders","prevOrder","option","index","handleOptionClick","orderId","selectedOptionData","find","updatedOrders","type","value","onChange","e","handleModificationChange","target","createNewOrder","newOrder","length","handleConfirmOrder","handleConfirmationNo","AddOrders2","AddOrders3","AddOrders4","Tables","selectedButton","setSelectedButton","handleButtonClick","buttonNumber","concat","disabled","Orders1","Orders2","Orders3","Orders4","App","Fragment","Router","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"+JA+JeA,MA3Jf,WACE,MAAOC,EAAQC,GAAaC,mBAAS,CACnC,CAAEC,GAAI,EAAGC,QAAQ,EAAOC,eAAgB,KAAMC,aAAc,GAAIC,KAAM,MAGjEC,EAAkBC,GAAuBP,oBAAS,GAUnDQ,EAAU,CACd,CAAEC,MAAO,kBAAmBJ,KAAM,GAClC,CAAEI,MAAO,QAASJ,KAAM,IACxB,CAAEI,MAAO,QAASJ,KAAM,GACxB,CAAEI,MAAO,QAASJ,KAAM,IAkCpBK,EAAuBC,GAC3Bb,EAAOc,OAAO,CAACC,EAAOC,IAAMD,EANFF,KAC1B,MAAMI,GAAmBJ,EAAMP,aAAe,GAC9C,OAAOO,EAAMN,KAAOU,GAIgBC,CAAmBF,GAAI,GAa7D,OACEG,IAAAC,cAAA,OAAKC,UAAU,KACbF,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eACpCN,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,WAGpCN,IAAAC,cAAA,KAAGI,MAAO,CAAEC,UAAW,SAAU,aAE/BN,IAAAC,cAAA,QAAMI,MAAO,CAAEE,MAAO,UAAW,iBAAed,MAElDO,IAAAC,cAAA,WAECpB,EAAO2B,IAAKd,GACXM,IAAAC,cAAA,OAAKQ,IAAKf,EAAMV,GAAIkB,UAAU,mBAC5BF,IAAAC,cAAA,UAAI,SAAOP,EAAMV,IACjBgB,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OACEC,UAAU,mBACVQ,QAASA,IACP5B,EAAW6B,GACTA,EAAWH,IAAKI,GACdA,EAAU5B,KAAOU,EAAMV,GACnB,IAAK4B,EAAW3B,QAAS2B,EAAU3B,QACnC2B,KAKTlB,EAAMR,gBAAkB,mBAG1BQ,EAAMT,QACLe,IAAAC,cAAA,MAAIC,UAAU,iBACXX,EAAQiB,IAAI,CAACK,EAAQC,IACpBd,IAAAC,cAAA,MACEQ,IAAKK,EACLJ,QAASA,IAlFDK,EAACC,EAAS9B,KAClC,MAAM+B,EAAqB1B,EAAQ2B,KAChCL,GAAWA,EAAOrB,QAAUN,GAEzBiC,EAAgBtC,EAAO2B,IAAKd,GAChCA,EAAMV,KAAOgC,EACT,IACKtB,EACHR,iBACAE,KAAM6B,EAAqBA,EAAmB7B,KAAO,EACrDH,QAAQ,GAEVS,GAENZ,EAAUqC,IAoEqBJ,CAAkBrB,EAAMV,GAAI6B,EAAOrB,QAEjDqB,EAAOrB,UAOlBQ,IAAAC,cAAA,aAAO,gBAELD,IAAAC,cAAA,SACEmB,KAAK,OACLC,MAAO3B,EAAMP,aACbmC,SAAWC,IACTC,OAhFoBR,EAgFKtB,EAAMV,GAhFFG,EAgFMoC,EAAEE,OAAOJ,WA/ExDvC,EAAW6B,GACTA,EAAWH,IAAKd,GACdA,EAAMV,KAAOgC,EAAU,IAAKtB,EAAOP,gBAAiBO,IAHzB8B,IAACR,EAAS7B,MAqFnCa,IAAAC,cAAA,SAAG,eACYP,EAAMN,QAOzBY,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQS,QA7EWgB,KACrB,MAAMC,EAAW,CACf3C,GAAIH,EAAO+C,OAAS,EACpB3C,QAAQ,EACRC,eAAgB,KAChBC,aAAc,GACdC,KAAM,GAERN,EAAU,IAAID,EAAQ8C,MAqEa,eAEjC3B,IAAAC,cAAA,WAEAD,IAAAC,cAAA,UAAQS,QAnIemB,KACzBvC,GAAoB,KAkImB,iBAC5BD,GACCW,IAAAC,cAAA,OAAKC,UAAU,8BACXF,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,SAAG,oCACHD,IAAAC,cAAA,SAAG,4BACHD,IAAAC,cAAA,SAAG,WAASR,KAEZO,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,QACvBJ,IAAAC,cAAA,UAAQS,QAvIDoB,KAC3BxC,GAAoB,KAsIuC,UCShDyC,MA3Jf,WACE,MAAOlD,EAAQC,GAAaC,mBAAS,CACnC,CAAEC,GAAI,EAAGC,QAAQ,EAAOC,eAAgB,KAAMC,aAAc,GAAIC,KAAM,MAGjEC,EAAkBC,GAAuBP,oBAAS,GAUnDQ,EAAU,CACd,CAAEC,MAAO,kBAAmBJ,KAAM,GAClC,CAAEI,MAAO,QAASJ,KAAM,IACxB,CAAEI,MAAO,QAASJ,KAAM,GACxB,CAAEI,MAAO,QAASJ,KAAM,IAkCpBK,EAAuBC,GAC3Bb,EAAOc,OAAO,CAACC,EAAOC,IAAMD,EANFF,KAC1B,MAAMI,GAAmBJ,EAAMP,aAAe,GAC9C,OAAOO,EAAMN,KAAOU,GAIgBC,CAAmBF,GAAI,GAa7D,OACEG,IAAAC,cAAA,OAAKC,UAAU,KACbF,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eACpCN,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,WAGpCN,IAAAC,cAAA,KAAGI,MAAO,CAAEC,UAAW,SAAU,aAE/BN,IAAAC,cAAA,QAAMI,MAAO,CAAEE,MAAO,UAAW,iBAAed,MAElDO,IAAAC,cAAA,WAECpB,EAAO2B,IAAKd,GACXM,IAAAC,cAAA,OAAKQ,IAAKf,EAAMV,GAAIkB,UAAU,mBAC5BF,IAAAC,cAAA,UAAI,SAAOP,EAAMV,IACjBgB,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OACEC,UAAU,mBACVQ,QAASA,IACP5B,EAAW6B,GACTA,EAAWH,IAAKI,GACdA,EAAU5B,KAAOU,EAAMV,GACnB,IAAK4B,EAAW3B,QAAS2B,EAAU3B,QACnC2B,KAKTlB,EAAMR,gBAAkB,mBAG1BQ,EAAMT,QACLe,IAAAC,cAAA,MAAIC,UAAU,iBACXX,EAAQiB,IAAI,CAACK,EAAQC,IACpBd,IAAAC,cAAA,MACEQ,IAAKK,EACLJ,QAASA,IAlFDK,EAACC,EAAS9B,KAClC,MAAM+B,EAAqB1B,EAAQ2B,KAChCL,GAAWA,EAAOrB,QAAUN,GAEzBiC,EAAgBtC,EAAO2B,IAAKd,GAChCA,EAAMV,KAAOgC,EACT,IACKtB,EACHR,iBACAE,KAAM6B,EAAqBA,EAAmB7B,KAAO,EACrDH,QAAQ,GAEVS,GAENZ,EAAUqC,IAoEqBJ,CAAkBrB,EAAMV,GAAI6B,EAAOrB,QAEjDqB,EAAOrB,UAOlBQ,IAAAC,cAAA,aAAO,gBAELD,IAAAC,cAAA,SACEmB,KAAK,OACLC,MAAO3B,EAAMP,aACbmC,SAAWC,IACTC,OAhFoBR,EAgFKtB,EAAMV,GAhFFG,EAgFMoC,EAAEE,OAAOJ,WA/ExDvC,EAAW6B,GACTA,EAAWH,IAAKd,GACdA,EAAMV,KAAOgC,EAAU,IAAKtB,EAAOP,gBAAiBO,IAHzB8B,IAACR,EAAS7B,MAqFnCa,IAAAC,cAAA,SAAG,eACYP,EAAMN,QAOzBY,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQS,QA7EWgB,KACrB,MAAMC,EAAW,CACf3C,GAAIH,EAAO+C,OAAS,EACpB3C,QAAQ,EACRC,eAAgB,KAChBC,aAAc,GACdC,KAAM,GAERN,EAAU,IAAID,EAAQ8C,MAqEa,eAEjC3B,IAAAC,cAAA,WAEAD,IAAAC,cAAA,UAAQS,QAnIemB,KACzBvC,GAAoB,KAkImB,iBAC5BD,GACCW,IAAAC,cAAA,OAAKC,UAAU,8BACXF,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,SAAG,oCACHD,IAAAC,cAAA,SAAG,4BACHD,IAAAC,cAAA,SAAG,WAASR,KAEZO,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,QACvBJ,IAAAC,cAAA,UAAQS,QAvIDoB,KAC3BxC,GAAoB,KAsIuC,UCShD0C,MA3Jf,WACE,MAAOnD,EAAQC,GAAaC,mBAAS,CACnC,CAAEC,GAAI,EAAGC,QAAQ,EAAOC,eAAgB,KAAMC,aAAc,GAAIC,KAAM,MAGjEC,EAAkBC,GAAuBP,oBAAS,GAUnDQ,EAAU,CACd,CAAEC,MAAO,kBAAmBJ,KAAM,GAClC,CAAEI,MAAO,QAASJ,KAAM,IACxB,CAAEI,MAAO,QAASJ,KAAM,GACxB,CAAEI,MAAO,QAASJ,KAAM,IAkCpBK,EAAuBC,GAC3Bb,EAAOc,OAAO,CAACC,EAAOC,IAAMD,EANFF,KAC1B,MAAMI,GAAmBJ,EAAMP,aAAe,GAC9C,OAAOO,EAAMN,KAAOU,GAIgBC,CAAmBF,GAAI,GAa7D,OACEG,IAAAC,cAAA,OAAKC,UAAU,KACbF,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eACpCN,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,WAGpCN,IAAAC,cAAA,KAAGI,MAAO,CAAEC,UAAW,SAAU,aAE/BN,IAAAC,cAAA,QAAMI,MAAO,CAAEE,MAAO,UAAW,iBAAed,MAElDO,IAAAC,cAAA,WAECpB,EAAO2B,IAAKd,GACXM,IAAAC,cAAA,OAAKQ,IAAKf,EAAMV,GAAIkB,UAAU,mBAC5BF,IAAAC,cAAA,UAAI,SAAOP,EAAMV,IACjBgB,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OACEC,UAAU,mBACVQ,QAASA,IACP5B,EAAW6B,GACTA,EAAWH,IAAKI,GACdA,EAAU5B,KAAOU,EAAMV,GACnB,IAAK4B,EAAW3B,QAAS2B,EAAU3B,QACnC2B,KAKTlB,EAAMR,gBAAkB,mBAG1BQ,EAAMT,QACLe,IAAAC,cAAA,MAAIC,UAAU,iBACXX,EAAQiB,IAAI,CAACK,EAAQC,IACpBd,IAAAC,cAAA,MACEQ,IAAKK,EACLJ,QAASA,IAlFDK,EAACC,EAAS9B,KAClC,MAAM+B,EAAqB1B,EAAQ2B,KAChCL,GAAWA,EAAOrB,QAAUN,GAEzBiC,EAAgBtC,EAAO2B,IAAKd,GAChCA,EAAMV,KAAOgC,EACT,IACKtB,EACHR,iBACAE,KAAM6B,EAAqBA,EAAmB7B,KAAO,EACrDH,QAAQ,GAEVS,GAENZ,EAAUqC,IAoEqBJ,CAAkBrB,EAAMV,GAAI6B,EAAOrB,QAEjDqB,EAAOrB,UAOlBQ,IAAAC,cAAA,aAAO,gBAELD,IAAAC,cAAA,SACEmB,KAAK,OACLC,MAAO3B,EAAMP,aACbmC,SAAWC,IACTC,OAhFoBR,EAgFKtB,EAAMV,GAhFFG,EAgFMoC,EAAEE,OAAOJ,WA/ExDvC,EAAW6B,GACTA,EAAWH,IAAKd,GACdA,EAAMV,KAAOgC,EAAU,IAAKtB,EAAOP,gBAAiBO,IAHzB8B,IAACR,EAAS7B,MAqFnCa,IAAAC,cAAA,SAAG,eACYP,EAAMN,QAOzBY,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQS,QA7EWgB,KACrB,MAAMC,EAAW,CACf3C,GAAIH,EAAO+C,OAAS,EACpB3C,QAAQ,EACRC,eAAgB,KAChBC,aAAc,GACdC,KAAM,GAERN,EAAU,IAAID,EAAQ8C,MAqEa,eAEjC3B,IAAAC,cAAA,WAEAD,IAAAC,cAAA,UAAQS,QAnIemB,KACzBvC,GAAoB,KAkImB,iBAC5BD,GACCW,IAAAC,cAAA,OAAKC,UAAU,8BACXF,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,SAAG,oCACHD,IAAAC,cAAA,SAAG,4BACHD,IAAAC,cAAA,SAAG,WAASR,KAEZO,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,QACvBJ,IAAAC,cAAA,UAAQS,QAvIDoB,KAC3BxC,GAAoB,KAsIuC,UCShD2C,MA3Jf,WACE,MAAOpD,EAAQC,GAAaC,mBAAS,CACnC,CAAEC,GAAI,EAAGC,QAAQ,EAAOC,eAAgB,KAAMC,aAAc,GAAIC,KAAM,MAGjEC,EAAkBC,GAAuBP,oBAAS,GAUnDQ,EAAU,CACd,CAAEC,MAAO,kBAAmBJ,KAAM,GAClC,CAAEI,MAAO,QAASJ,KAAM,IACxB,CAAEI,MAAO,QAASJ,KAAM,GACxB,CAAEI,MAAO,QAASJ,KAAM,IAkCpBK,EAAuBC,GAC3Bb,EAAOc,OAAO,CAACC,EAAOC,IAAMD,EANFF,KAC1B,MAAMI,GAAmBJ,EAAMP,aAAe,GAC9C,OAAOO,EAAMN,KAAOU,GAIgBC,CAAmBF,GAAI,GAa7D,OACEG,IAAAC,cAAA,OAAKC,UAAU,KACbF,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eACpCN,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,WAGpCN,IAAAC,cAAA,KAAGI,MAAO,CAAEC,UAAW,SAAU,aAE/BN,IAAAC,cAAA,QAAMI,MAAO,CAAEE,MAAO,UAAW,iBAAed,MAElDO,IAAAC,cAAA,WAECpB,EAAO2B,IAAKd,GACXM,IAAAC,cAAA,OAAKQ,IAAKf,EAAMV,GAAIkB,UAAU,mBAC5BF,IAAAC,cAAA,UAAI,SAAOP,EAAMV,IACjBgB,IAAAC,cAAA,OAAKC,UAAU,sBACbF,IAAAC,cAAA,OACEC,UAAU,mBACVQ,QAASA,IACP5B,EAAW6B,GACTA,EAAWH,IAAKI,GACdA,EAAU5B,KAAOU,EAAMV,GACnB,IAAK4B,EAAW3B,QAAS2B,EAAU3B,QACnC2B,KAKTlB,EAAMR,gBAAkB,mBAG1BQ,EAAMT,QACLe,IAAAC,cAAA,MAAIC,UAAU,iBACXX,EAAQiB,IAAI,CAACK,EAAQC,IACpBd,IAAAC,cAAA,MACEQ,IAAKK,EACLJ,QAASA,IAlFDK,EAACC,EAAS9B,KAClC,MAAM+B,EAAqB1B,EAAQ2B,KAChCL,GAAWA,EAAOrB,QAAUN,GAEzBiC,EAAgBtC,EAAO2B,IAAKd,GAChCA,EAAMV,KAAOgC,EACT,IACKtB,EACHR,iBACAE,KAAM6B,EAAqBA,EAAmB7B,KAAO,EACrDH,QAAQ,GAEVS,GAENZ,EAAUqC,IAoEqBJ,CAAkBrB,EAAMV,GAAI6B,EAAOrB,QAEjDqB,EAAOrB,UAOlBQ,IAAAC,cAAA,aAAO,gBAELD,IAAAC,cAAA,SACEmB,KAAK,OACLC,MAAO3B,EAAMP,aACbmC,SAAWC,IACTC,OAhFoBR,EAgFKtB,EAAMV,GAhFFG,EAgFMoC,EAAEE,OAAOJ,WA/ExDvC,EAAW6B,GACTA,EAAWH,IAAKd,GACdA,EAAMV,KAAOgC,EAAU,IAAKtB,EAAOP,gBAAiBO,IAHzB8B,IAACR,EAAS7B,MAqFnCa,IAAAC,cAAA,SAAG,eACYP,EAAMN,QAOzBY,IAAAC,cAAA,WACAD,IAAAC,cAAA,UAAQS,QA7EWgB,KACrB,MAAMC,EAAW,CACf3C,GAAIH,EAAO+C,OAAS,EACpB3C,QAAQ,EACRC,eAAgB,KAChBC,aAAc,GACdC,KAAM,GAERN,EAAU,IAAID,EAAQ8C,MAqEa,eAEjC3B,IAAAC,cAAA,WAEAD,IAAAC,cAAA,UAAQS,QAnIemB,KACzBvC,GAAoB,KAkImB,iBAC5BD,GACCW,IAAAC,cAAA,OAAKC,UAAU,8BACXF,IAAAC,cAAA,OAAKC,UAAU,sBACXF,IAAAC,cAAA,SAAG,oCACHD,IAAAC,cAAA,SAAG,4BACHD,IAAAC,cAAA,SAAG,WAASR,KAEZO,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,QACvBJ,IAAAC,cAAA,UAAQS,QAvIDoB,KAC3BxC,GAAoB,KAsIuC,U,KCtFhD4C,MA5Df,WACI,MAAOC,EAAgBC,GAAqBrD,mBAAS,MAE/CsD,EAAqBC,IACzBF,EAAkBE,IAIpB,OAEItC,IAAAC,cAAA,WAEED,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,0BACpCN,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,8BAEpCN,IAAAC,cAAA,WAEAD,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,mBAEpCN,IAAAC,cAAA,SAAOC,UAAU,eACfF,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIC,UAAS,eAAAqC,OAAoC,IAAnBJ,EAAuB,WAAa,KAChEnC,IAAAC,cAAA,UAAQS,QAASA,IAAM2B,EAAkB,IAAI,YAE/CrC,IAAAC,cAAA,MAAIC,UAAS,eAAAqC,OAAoC,IAAnBJ,EAAuB,WAAa,KAChEnC,IAAAC,cAAA,UAAQS,QAASA,IAAM2B,EAAkB,IAAI,aAGjDrC,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIC,UAAS,eAAAqC,OAAoC,IAAnBJ,EAAuB,WAAa,KAChEnC,IAAAC,cAAA,UAAQS,QAASA,IAAM2B,EAAkB,IAAI,YAE/CrC,IAAAC,cAAA,MAAIC,UAAS,eAAAqC,OAAoC,IAAnBJ,EAAuB,WAAa,KAChEnC,IAAAC,cAAA,UAAQS,QAASA,IAAM2B,EAAkB,IAAI,eAMrDrC,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WACtBN,IAAAC,cAACE,IAAI,CAACC,GAAE,cAAAmC,OAAgBJ,IACtBnC,IAAAC,cAAA,UAAQuC,SAA6B,OAAnBL,GACI,OAAnBA,EAAuB,uBAAAI,OAA0BJ,GAAmB,eAK3EnC,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WACtBN,IAAAC,cAACE,IAAI,CAACC,GAAE,WAAAmC,OAAaJ,IACnBnC,IAAAC,cAAA,UAAQuC,SAA6B,OAAlBL,GACC,OAAnBA,EAAuB,wBAAAI,OAA2BJ,GAAmB,kBClCrEM,MAdf,WACE,OACEzC,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eAEpCN,IAAAC,cAAA,MAAII,MAAO,CAACC,UAAW,WAAY,aCQ1BoC,MAdf,WACE,OACE1C,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eAEpCN,IAAAC,cAAA,MAAII,MAAO,CAACC,UAAW,WAAY,aCQ1BqC,MAdf,WACE,OACE3C,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eAEpCN,IAAAC,cAAA,MAAII,MAAO,CAACC,UAAW,WAAY,aCQ1BsC,MAdf,WACE,OACE5C,IAAAC,cAAA,WACED,IAAAC,cAAA,cAAQD,IAAAC,cAACE,IAAI,CAACC,GAAI,KAAK,qBACvBJ,IAAAC,cAAA,MAAII,MAAO,CAAEC,UAAW,WAAY,eAEpCN,IAAAC,cAAA,MAAII,MAAO,CAACC,UAAW,WAAY,aC0B1BuC,MA1Bf,WAGE,OACE7C,IAAAC,cAAAD,IAAA8C,SAAA,KACE9C,IAAAC,cAAC8C,IAAM,KACL/C,IAAAC,cAAC+C,IAAM,KACLhD,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,IAAIC,QAASpD,IAAAC,cAACiC,EAAM,QAEtClC,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,eAAeC,QAASpD,IAAAC,cAACrB,EAAU,QACrDoB,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,eAAeC,QAASpD,IAAAC,cAAC8B,EAAU,QACrD/B,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,eAAeC,QAASpD,IAAAC,cAAC+B,EAAU,QACrDhC,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,eAAeC,QAASpD,IAAAC,cAACgC,EAAU,QACrDjC,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,QAASpD,IAAAC,cAACwC,EAAO,QAC/CzC,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,QAASpD,IAAAC,cAACyC,EAAO,QAC/C1C,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,QAASpD,IAAAC,cAAC0C,EAAO,QAC/C3C,IAAAC,cAACgD,IAAK,CAACC,OAAK,EAACC,KAAK,YAAYC,QAASpD,IAAAC,cAAC2C,EAAO,YCjB1CS,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCFDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnE,IAAAC,cAACD,IAAMoE,WAAU,KACfpE,IAAAC,cAAC4C,EAAG,QAORQ,K","file":"static/js/main.7af53def.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './1.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction AddOrders1() {\r\n  const [orders, setOrders] = useState([\r\n    { id: 1, isOpen: false, selectedOption: null, modification: '', cost: 0 },\r\n  ]);\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const handleConfirmOrder = () => {\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n\r\n  const handleConfirmationNo = () =>{\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const options = [\r\n    { label: '--select item--', cost: 0 },\r\n    { label: 'Pizza', cost: 10 },\r\n    { label: 'Pasta', cost: 8 },\r\n    { label: 'Salad', cost: 5 },\r\n  ];\r\n\r\n  const handleOptionClick = (orderId, selectedOption) => {\r\n    const selectedOptionData = options.find(\r\n      (option) => option.label === selectedOption\r\n    );\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId\r\n        ? {\r\n            ...order,\r\n            selectedOption,\r\n            cost: selectedOptionData ? selectedOptionData.cost : 0,\r\n            isOpen: false,\r\n          }\r\n        : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleModificationChange = (orderId, modification) => {\r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) =>\r\n        order.id === orderId ? { ...order, modification } : order\r\n      )\r\n    );\r\n  };\r\n\r\n  /*FOR ADDING COST FOR A MODIFICATION*/\r\n  const calculateTotalCost = (order) => {\r\n    const modificationCost = order.modification ? 0 : 0; // Assuming a fixed cost for modifications\r\n    return order.cost + modificationCost;\r\n  };\r\n\r\n  const calculateOrderTotal = (order) =>\r\n    orders.reduce((total, o) => total + calculateTotalCost(o), 0);\r\n\r\n  const createNewOrder = () => {\r\n    const newOrder = {\r\n      id: orders.length + 1,\r\n      isOpen: false,\r\n      selectedOption: null,\r\n      modification: '',\r\n      cost: 0,\r\n    };\r\n    setOrders([...orders, newOrder]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"1\">\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      <h1 style={{ textAlign: 'center' }}>Table 1</h1>\r\n\r\n      {/* align items on the same row */}\r\n      <p style={{ textAlign: 'left' }}>\r\n        Order ETA:\r\n        <span style={{ float: 'right' }}>Order Total: ${calculateOrderTotal()}</span>\r\n      </p>\r\n      <hr />\r\n\r\n      {orders.map((order) => (\r\n        <div key={order.id} className=\"order-container\">\r\n          <h1>Order {order.id}</h1>\r\n          <div className=\"dropdown-container\">\r\n            <div\r\n              className=\"dropdown-trigger\"\r\n              onClick={() =>\r\n                setOrders((prevOrders) =>\r\n                  prevOrders.map((prevOrder) =>\r\n                    prevOrder.id === order.id\r\n                      ? { ...prevOrder, isOpen: !prevOrder.isOpen }\r\n                      : prevOrder\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              {order.selectedOption || '--Select item--'}\r\n            </div>\r\n\r\n            {order.isOpen && (\r\n              <ul className=\"dropdown-list\">\r\n                {options.map((option, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleOptionClick(order.id, option.label)}\r\n                  >\r\n                    {option.label}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <label>\r\n            Modification:\r\n            <input\r\n              type=\"text\"\r\n              value={order.modification}\r\n              onChange={(e) =>\r\n                handleModificationChange(order.id, e.target.value)\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <p>\r\n            Item Cost: ${order.cost}\r\n          </p>\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n      <button onClick={createNewOrder}>New Order +</button>\r\n\r\n      <hr/>\r\n\r\n      <button onClick={handleConfirmOrder}>Confirm Order</button>\r\n              {showConfirmation && (\r\n                <div className=\"confirmation-popup-overlay\">\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Submit the order to the kitchen?</p>\r\n                        <p>ETA:***ENTER ETA HERE***</p>\r\n                        <p>Total: ${calculateOrderTotal()}</p>\r\n    \r\n                        <button><Link to={'/'}>Yes</Link></button>\r\n                        <button onClick={handleConfirmationNo}>No</button>\r\n                    </div>\r\n                </div>\r\n              )}\r\n              \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOrders1;","import React, { useState } from 'react';\r\nimport './1.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction AddOrders2() {\r\n  const [orders, setOrders] = useState([\r\n    { id: 1, isOpen: false, selectedOption: null, modification: '', cost: 0 },\r\n  ]);\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const handleConfirmOrder = () => {\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n\r\n  const handleConfirmationNo = () =>{\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const options = [\r\n    { label: '--select item--', cost: 0 },\r\n    { label: 'Pizza', cost: 10 },\r\n    { label: 'Pasta', cost: 8 },\r\n    { label: 'Salad', cost: 5 },\r\n  ];\r\n\r\n  const handleOptionClick = (orderId, selectedOption) => {\r\n    const selectedOptionData = options.find(\r\n      (option) => option.label === selectedOption\r\n    );\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId\r\n        ? {\r\n            ...order,\r\n            selectedOption,\r\n            cost: selectedOptionData ? selectedOptionData.cost : 0,\r\n            isOpen: false,\r\n          }\r\n        : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleModificationChange = (orderId, modification) => {\r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) =>\r\n        order.id === orderId ? { ...order, modification } : order\r\n      )\r\n    );\r\n  };\r\n\r\n  /*FOR ADDING COST FOR A MODIFICATION*/\r\n  const calculateTotalCost = (order) => {\r\n    const modificationCost = order.modification ? 0 : 0; // Assuming a fixed cost for modifications\r\n    return order.cost + modificationCost;\r\n  };\r\n\r\n  const calculateOrderTotal = (order) =>\r\n    orders.reduce((total, o) => total + calculateTotalCost(o), 0);\r\n\r\n  const createNewOrder = () => {\r\n    const newOrder = {\r\n      id: orders.length + 1,\r\n      isOpen: false,\r\n      selectedOption: null,\r\n      modification: '',\r\n      cost: 0,\r\n    };\r\n    setOrders([...orders, newOrder]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"1\">\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      <h1 style={{ textAlign: 'center' }}>Table 2</h1>\r\n\r\n      {/* align items on the same row */}\r\n      <p style={{ textAlign: 'left' }}>\r\n        Order ETA:\r\n        <span style={{ float: 'right' }}>Order Total: ${calculateOrderTotal()}</span>\r\n      </p>\r\n      <hr />\r\n\r\n      {orders.map((order) => (\r\n        <div key={order.id} className=\"order-container\">\r\n          <h1>Order {order.id}</h1>\r\n          <div className=\"dropdown-container\">\r\n            <div\r\n              className=\"dropdown-trigger\"\r\n              onClick={() =>\r\n                setOrders((prevOrders) =>\r\n                  prevOrders.map((prevOrder) =>\r\n                    prevOrder.id === order.id\r\n                      ? { ...prevOrder, isOpen: !prevOrder.isOpen }\r\n                      : prevOrder\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              {order.selectedOption || '--Select item--'}\r\n            </div>\r\n\r\n            {order.isOpen && (\r\n              <ul className=\"dropdown-list\">\r\n                {options.map((option, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleOptionClick(order.id, option.label)}\r\n                  >\r\n                    {option.label}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <label>\r\n            Modification:\r\n            <input\r\n              type=\"text\"\r\n              value={order.modification}\r\n              onChange={(e) =>\r\n                handleModificationChange(order.id, e.target.value)\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <p>\r\n            Item Cost: ${order.cost}\r\n          </p>\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n      <button onClick={createNewOrder}>New Order +</button>\r\n\r\n      <hr/>\r\n\r\n      <button onClick={handleConfirmOrder}>Confirm Order</button>\r\n              {showConfirmation && (\r\n                <div className=\"confirmation-popup-overlay\">\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Submit the order to the kitchen?</p>\r\n                        <p>ETA:***ENTER ETA HERE***</p>\r\n                        <p>Total: ${calculateOrderTotal()}</p>\r\n    \r\n                        <button><Link to={'/'}>Yes</Link></button>\r\n                        <button onClick={handleConfirmationNo}>No</button>\r\n                    </div>\r\n                </div>\r\n              )}\r\n              \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOrders2;","import React, { useState } from 'react';\r\nimport './1.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction AddOrders3() {\r\n  const [orders, setOrders] = useState([\r\n    { id: 1, isOpen: false, selectedOption: null, modification: '', cost: 0 },\r\n  ]);\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const handleConfirmOrder = () => {\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n  \r\n  const handleConfirmationNo = () =>{\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const options = [\r\n    { label: '--select item--', cost: 0 },\r\n    { label: 'Pizza', cost: 10 },\r\n    { label: 'Pasta', cost: 8 },\r\n    { label: 'Salad', cost: 5 },\r\n  ];\r\n\r\n  const handleOptionClick = (orderId, selectedOption) => {\r\n    const selectedOptionData = options.find(\r\n      (option) => option.label === selectedOption\r\n    );\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId\r\n        ? {\r\n            ...order,\r\n            selectedOption,\r\n            cost: selectedOptionData ? selectedOptionData.cost : 0,\r\n            isOpen: false,\r\n          }\r\n        : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleModificationChange = (orderId, modification) => {\r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) =>\r\n        order.id === orderId ? { ...order, modification } : order\r\n      )\r\n    );\r\n  };\r\n\r\n  /*FOR ADDING COST FOR A MODIFICATION*/\r\n  const calculateTotalCost = (order) => {\r\n    const modificationCost = order.modification ? 0 : 0; // Assuming a fixed cost for modifications\r\n    return order.cost + modificationCost;\r\n  };\r\n\r\n  const calculateOrderTotal = (order) =>\r\n    orders.reduce((total, o) => total + calculateTotalCost(o), 0);\r\n\r\n  const createNewOrder = () => {\r\n    const newOrder = {\r\n      id: orders.length + 1,\r\n      isOpen: false,\r\n      selectedOption: null,\r\n      modification: '',\r\n      cost: 0,\r\n    };\r\n    setOrders([...orders, newOrder]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"1\">\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      <h1 style={{ textAlign: 'center' }}>Table 3</h1>\r\n\r\n      {/* align items on the same row */}\r\n      <p style={{ textAlign: 'left' }}>\r\n        Order ETA:\r\n        <span style={{ float: 'right' }}>Order Total: ${calculateOrderTotal()}</span>\r\n      </p>\r\n      <hr />\r\n\r\n      {orders.map((order) => (\r\n        <div key={order.id} className=\"order-container\">\r\n          <h1>Order {order.id}</h1>\r\n          <div className=\"dropdown-container\">\r\n            <div\r\n              className=\"dropdown-trigger\"\r\n              onClick={() =>\r\n                setOrders((prevOrders) =>\r\n                  prevOrders.map((prevOrder) =>\r\n                    prevOrder.id === order.id\r\n                      ? { ...prevOrder, isOpen: !prevOrder.isOpen }\r\n                      : prevOrder\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              {order.selectedOption || '--Select item--'}\r\n            </div>\r\n\r\n            {order.isOpen && (\r\n              <ul className=\"dropdown-list\">\r\n                {options.map((option, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleOptionClick(order.id, option.label)}\r\n                  >\r\n                    {option.label}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <label>\r\n            Modification:\r\n            <input\r\n              type=\"text\"\r\n              value={order.modification}\r\n              onChange={(e) =>\r\n                handleModificationChange(order.id, e.target.value)\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <p>\r\n            Item Cost: ${order.cost}\r\n          </p>\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n      <button onClick={createNewOrder}>New Order +</button>\r\n\r\n      <hr/>\r\n\r\n      <button onClick={handleConfirmOrder}>Confirm Order</button>\r\n              {showConfirmation && (\r\n                <div className=\"confirmation-popup-overlay\">\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Submit the order to the kitchen?</p>\r\n                        <p>ETA:***ENTER ETA HERE***</p>\r\n                        <p>Total: ${calculateOrderTotal()}</p>\r\n    \r\n                        <button><Link to={'/'}>Yes</Link></button>\r\n                        <button onClick={handleConfirmationNo}>No</button>\r\n                    </div>\r\n                </div>\r\n              )}\r\n              \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOrders3;","import React, { useState } from 'react';\r\nimport './1.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction AddOrders4() {\r\n  const [orders, setOrders] = useState([\r\n    { id: 1, isOpen: false, selectedOption: null, modification: '', cost: 0 },\r\n  ]);\r\n\r\n  const [showConfirmation, setShowConfirmation] = useState(false);\r\n  const handleConfirmOrder = () => {\r\n    setShowConfirmation(true);\r\n  };\r\n\r\n\r\n  const handleConfirmationNo = () =>{\r\n    setShowConfirmation(false);\r\n  };\r\n\r\n  const options = [\r\n    { label: '--select item--', cost: 0 },\r\n    { label: 'Pizza', cost: 10 },\r\n    { label: 'Pasta', cost: 8 },\r\n    { label: 'Salad', cost: 5 },\r\n  ];\r\n\r\n  const handleOptionClick = (orderId, selectedOption) => {\r\n    const selectedOptionData = options.find(\r\n      (option) => option.label === selectedOption\r\n    );\r\n    const updatedOrders = orders.map((order) =>\r\n      order.id === orderId\r\n        ? {\r\n            ...order,\r\n            selectedOption,\r\n            cost: selectedOptionData ? selectedOptionData.cost : 0,\r\n            isOpen: false,\r\n          }\r\n        : order\r\n    );\r\n    setOrders(updatedOrders);\r\n  };\r\n\r\n  const handleModificationChange = (orderId, modification) => {\r\n    setOrders((prevOrders) =>\r\n      prevOrders.map((order) =>\r\n        order.id === orderId ? { ...order, modification } : order\r\n      )\r\n    );\r\n  };\r\n\r\n  /*FOR ADDING COST FOR A MODIFICATION*/\r\n  const calculateTotalCost = (order) => {\r\n    const modificationCost = order.modification ? 0 : 0; // Assuming a fixed cost for modifications\r\n    return order.cost + modificationCost;\r\n  };\r\n\r\n  const calculateOrderTotal = (order) =>\r\n    orders.reduce((total, o) => total + calculateTotalCost(o), 0);\r\n\r\n  const createNewOrder = () => {\r\n    const newOrder = {\r\n      id: orders.length + 1,\r\n      isOpen: false,\r\n      selectedOption: null,\r\n      modification: '',\r\n      cost: 0,\r\n    };\r\n    setOrders([...orders, newOrder]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"1\">\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      <h1 style={{ textAlign: 'center' }}>Table 4</h1>\r\n\r\n      {/* align items on the same row */}\r\n      <p style={{ textAlign: 'left' }}>\r\n        Order ETA:\r\n        <span style={{ float: 'right' }}>Order Total: ${calculateOrderTotal()}</span>\r\n      </p>\r\n      <hr />\r\n\r\n      {orders.map((order) => (\r\n        <div key={order.id} className=\"order-container\">\r\n          <h1>Order {order.id}</h1>\r\n          <div className=\"dropdown-container\">\r\n            <div\r\n              className=\"dropdown-trigger\"\r\n              onClick={() =>\r\n                setOrders((prevOrders) =>\r\n                  prevOrders.map((prevOrder) =>\r\n                    prevOrder.id === order.id\r\n                      ? { ...prevOrder, isOpen: !prevOrder.isOpen }\r\n                      : prevOrder\r\n                  )\r\n                )\r\n              }\r\n            >\r\n              {order.selectedOption || '--Select item--'}\r\n            </div>\r\n\r\n            {order.isOpen && (\r\n              <ul className=\"dropdown-list\">\r\n                {options.map((option, index) => (\r\n                  <li\r\n                    key={index}\r\n                    onClick={() => handleOptionClick(order.id, option.label)}\r\n                  >\r\n                    {option.label}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n          </div>\r\n\r\n          <label>\r\n            Modification:\r\n            <input\r\n              type=\"text\"\r\n              value={order.modification}\r\n              onChange={(e) =>\r\n                handleModificationChange(order.id, e.target.value)\r\n              }\r\n            />\r\n          </label>\r\n\r\n          <p>\r\n            Item Cost: ${order.cost}\r\n          </p>\r\n\r\n\r\n        </div>\r\n      ))}\r\n\r\n      <hr />\r\n      <button onClick={createNewOrder}>New Order +</button>\r\n\r\n      <hr/>\r\n\r\n      <button onClick={handleConfirmOrder}>Confirm Order</button>\r\n              {showConfirmation && (\r\n                <div className=\"confirmation-popup-overlay\">\r\n                    <div className=\"confirmation-popup\">\r\n                        <p>Submit the order to the kitchen?</p>\r\n                        <p>ETA:***ENTER ETA HERE***</p>\r\n                        <p>Total: ${calculateOrderTotal()}</p>\r\n    \r\n                        <button><Link to={'/'}>Yes</Link></button>\r\n                        <button onClick={handleConfirmationNo}>No</button>\r\n                    </div>\r\n                </div>\r\n              )}\r\n              \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddOrders4;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nfunction Tables() {\r\n    const [selectedButton, setSelectedButton] = useState(null);\r\n\r\n    const handleButtonClick = (buttonNumber) => {\r\n      setSelectedButton(buttonNumber);\r\n    };\r\n  \r\n  \r\n    return (\r\n  \r\n        <div>\r\n\r\n          <h2 style={{ textAlign: 'center' }}>***PULL SERVER NAME***</h2>\r\n          <h2 style={{ textAlign: 'center' }}>***PULL RESTAURANT NAME***</h2>\r\n  \r\n          <hr />\r\n  \r\n          <h1 style={{ textAlign: 'center' }}>Assigned Tables</h1>\r\n  \r\n          <table className=\"tables-grid\">\r\n            <tbody>\r\n              <tr>\r\n                <td className={`table-table ${selectedButton === 1 ? 'selected' : ''}`}>\r\n                  <button onClick={() => handleButtonClick(1)}>Table 1</button>\r\n                </td>\r\n                <td className={`table-table ${selectedButton === 2 ? 'selected' : ''}`}>\r\n                  <button onClick={() => handleButtonClick(2)}>Table 2</button>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td className={`table-table ${selectedButton === 3 ? 'selected' : ''}`}>\r\n                  <button onClick={() => handleButtonClick(3)}>Table 3</button>\r\n                </td>\r\n                <td className={`table-table ${selectedButton === 4 ? 'selected' : ''}`}>\r\n                  <button onClick={() => handleButtonClick(4)}>Table 4</button>\r\n                </td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n  \r\n          <h1 style={{ textAlign: 'center' }}>\r\n            <Link to={`/AddOrders/${selectedButton}`}>\r\n              <button disabled={selectedButton === null}>\r\n                {selectedButton !== null ? `Add Order for Table ${selectedButton}` : 'Add order'}\r\n              </button>\r\n            </Link>\r\n          </h1>\r\n  \r\n          <h3 style={{ textAlign: 'center' }}>\r\n            <Link to={`/Orders/${selectedButton}`}>\r\n              <button disabled ={selectedButton ===null}>\r\n              {selectedButton !== null ? `View Order for Table ${selectedButton}` : 'View order'}\r\n              </button>\r\n            </Link>\r\n          </h3>\r\n        </div>\r\n  \r\n    );\r\n  }\r\n\r\nexport default Tables","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*all information needs to be pulled from database for this */\r\n\r\n\r\n\r\nfunction Orders1() {\r\n  return (\r\n    <div>\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      \r\n      <h3 style={{textAlign: 'center' }}>Table 1</h3>\r\n      \r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders1;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*all information needs to be pulled from database for this */\r\n\r\n\r\n\r\nfunction Orders2() {\r\n  return (\r\n    <div>\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      \r\n      <h3 style={{textAlign: 'center' }}>Table 2</h3>\r\n      \r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders2;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*all information needs to be pulled from database for this */\r\n\r\n\r\n\r\nfunction Orders3() {\r\n  return (\r\n    <div>\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      \r\n      <h3 style={{textAlign: 'center' }}>Table 3</h3>\r\n      \r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders3;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n/*all information needs to be pulled from database for this */\r\n\r\n\r\n\r\nfunction Orders4() {\r\n  return (\r\n    <div>\r\n      <button><Link to={'/'}>Return to Tables</Link></button>\r\n      <h2 style={{ textAlign: 'center' }}>Server Name</h2>\r\n      \r\n      <h3 style={{textAlign: 'center' }}>Table 4</h3>\r\n      \r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Orders4;","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\r\nimport AddOrders1 from './AddOrders/1';\r\nimport AddOrders2 from './AddOrders/2';\r\nimport AddOrders3 from './AddOrders/3';\r\nimport AddOrders4 from './AddOrders/4';\r\nimport Tables from './Tables';\r\nimport Orders1 from './Orders/1';\r\nimport Orders2 from './Orders/2';\r\nimport Orders3 from './Orders/3';\r\nimport Orders4 from './Orders/4';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Routes>\r\n          <Route exact path='/' element={<Tables />}/>\r\n          {/* Use render method to dynamically render the appropriate AddOrders component */}\r\n          <Route exact path=\"/AddOrders/1\" element={<AddOrders1 />} />\r\n          <Route exact path=\"/AddOrders/2\" element={<AddOrders2 />} />\r\n          <Route exact path=\"/AddOrders/3\" element={<AddOrders3 />} />\r\n          <Route exact path=\"/AddOrders/4\" element={<AddOrders4 />} />\r\n          <Route exact path=\"/Orders/1\" element={<Orders1 />} />\r\n          <Route exact path=\"/Orders/2\" element={<Orders2 />} />\r\n          <Route exact path=\"/Orders/3\" element={<Orders3 />} />\r\n          <Route exact path=\"/Orders/4\" element={<Orders4 />} />\r\n        </Routes>\r\n      </Router>\r\n\r\n    </>\r\n\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}